// <auto-generated />
using System;
using CellRepository.Infra.DataAcess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CellRepository.Infra.DataAcess.Migrations
{
    [DbContext(typeof(CellRepositoryContext))]
    [Migration("20210712212618_add_more_stuff_smartphone_rate10field")]
    partial class add_more_stuff_smartphone_rate10field
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CellRepository.Domain.Entities.PerformanceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AntutuPoint")
                        .HasColumnType("Bigint")
                        .HasComment("Display information about the score inside the antutu site");

                    b.Property<decimal>("CameraPoints")
                        .HasColumnType("Numeric(2)")
                        .HasComment("Rate 0 to 10 about the camera");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateOfUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("PerformancePoints")
                        .HasColumnType("Numeric(2)")
                        .HasComment("Rate 0 to 10 about the performance in overall");

                    b.Property<decimal>("ScreenPoints")
                        .HasColumnType("Numeric(2)")
                        .HasComment("Rate 0 to 10 about the screen");

                    b.Property<int>("SmartphoneId")
                        .HasColumnType("integer");

                    b.Property<int>("UserIdLastChange")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SmartphoneId")
                        .IsUnique();

                    b.ToTable("PerfomanceInfo");
                });

            modelBuilder.Entity("CellRepository.Domain.Entities.SmartphoneEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateOfUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)")
                        .HasComment("To describe the principal characteristics of the smartphone");

                    b.Property<DateTime>("LaunchDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValue(new DateTime(2021, 7, 12, 18, 26, 17, 630, DateTimeKind.Local).AddTicks(2709))
                        .HasComment("Describes the date launching of this smartphone");

                    b.Property<string>("OsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasComment("Describes the version of the smartphone");

                    b.Property<int>("PerformanceInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("SmartphoneName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasComment("This columns is to store the name of the smartphone");

                    b.Property<int>("UserIdLastChange")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric(4,2)")
                        .HasComment("Describes the weight of the smartphone");

                    b.HasKey("Id");

                    b.ToTable("Smartphones");
                });

            modelBuilder.Entity("CellRepository.Domain.Entities.PerformanceEntity", b =>
                {
                    b.HasOne("CellRepository.Domain.Entities.SmartphoneEntity", "Smartphone")
                        .WithOne("PerfomanceInfo")
                        .HasForeignKey("CellRepository.Domain.Entities.PerformanceEntity", "SmartphoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Smartphone");
                });

            modelBuilder.Entity("CellRepository.Domain.Entities.SmartphoneEntity", b =>
                {
                    b.Navigation("PerfomanceInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
